head	1.2;
access;
symbols;
locks;
comment	@ * @;


1.2
date	2015.08.10.22.31.42;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.08.05.03.50.58;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@// Bradley Bernard, bmbernar@@ucsc.edu
// CS 101: PA5
// Aug 7, 2015
// $Id: Graph.h,v 1.1 2015-08-04 20:50:58-07 - - $

#ifndef __GRAPH_H__
#define __GRAPH_H__

#include <stdio.h>
#include "List.h"

#define UNDEF -3
#define NIL -2

typedef struct GraphObj* Graph;

Graph newGraph(int n);
void freeGraph(Graph* pG);

int getOrder(Graph G);
int getSize(Graph G);
int getParent(Graph G, int u);
int getDiscover(Graph G, int u);
int getFinish(Graph G, int u);

void addArc(Graph G, int u, int v);
void addEdge(Graph G, int u, int v);
void DFS(Graph G, List S);

Graph transpose(Graph G);
Graph copyGraph(Graph G);
void printGraph(FILE *out, Graph G);

#endif
@


1.1
log
@-
@
text
@d2 3
a4 3
// CS 101: PA4
// July 30, 2015
// $Id: Graph.h,v 1.3 2015-08-01 19:11:01-07 - - $
d12 1
a13 1
#define INF -1
a21 1
int getSource(Graph G);
d23 2
a24 2
int getDist(Graph G, int u);
void getPath(List L, Graph G, int u);
d26 1
a26 1
void makeNull(Graph G);
d28 1
a28 2
void addArc(Graph G, int u, int v);
void BFS(Graph G, int s);
d30 2
@

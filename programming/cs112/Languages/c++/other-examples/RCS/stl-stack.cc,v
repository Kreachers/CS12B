head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2008.01.29.23.10.45;	author -;	state -;
branches;
next	1.2;

1.2
date	2008.01.29.23.03.08;	author -;	state -;
branches;
next	1.1;

1.1
date	2008.01.29.22.33.39;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: stl-stack.cc,v 1.2 2008-01-29 15:03:08-08 - - $

#include <iostream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

template <class type>
struct test_stack{
   //
   // Assumes that cin>> and cout<< are defined for type.
   //
   static void run_test (string label) {
      stack <type, vector <type> > the_stack;
      type value;

      //
      // Read in objects of type until end of file or failure
      //
      cout << label << "----------------" << endl;
      while (cin >> value) {
         the_stack.push (value);
         cout << "input = " << value << endl;
      };

      //
      // Dump out the stack and empty it.
      //
      cout << label << "----------------" << endl;
      while (! the_stack.empty()) {
         cout << "output = " << the_stack.top() << endl;
         the_stack.pop();
      };
   };
};

int main (int argc, char **argv) {
   //
   // QND option handler.  -s means strings, else doubles.
   //
   string options = argc > 1 ? argv[1] : "";
   if (options == "-s") test_stack<string>::run_test ("string");
                   else test_stack<double>::run_test ("double");
   return 0;
};
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: stl-stack.cc,v 1.1 2008-01-29 14:33:39-08 - - $
d10 1
a10 1
template< class type >
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: stl-stack.cc,v 320.3 2002-01-14 20:13:34-08 - - $
d10 2
a11 2
template< class Type >
struct Test_stack{
d13 1
a13 1
   // Assumes that cin>> and cout<< are defined for Type.
d15 3
a17 3
   static void run_test( string label ){
      stack< Type, vector< Type > > the_stack;
      Type value;
d20 1
a20 1
      // Read in objects of Type until end of file or failure
d23 2
a24 2
      while( cin >> value ){
         the_stack.push( value );
d32 1
a32 1
      while( ! the_stack.empty() ){
d39 1
a39 1
int main( int argc, char *argv[] ){
d44 2
a45 2
   if( options == "-s" ) Test_stack<string>::run_test( "string" );
                    else Test_stack<double>::run_test( "double" );
@
